<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cs/theory on</title><link>https://wiki.yigit.run/tags/cs/theory/</link><description>Recent content in cs/theory on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wiki.yigit.run/tags/cs/theory/index.xml" rel="self" type="application/rss+xml"/><item><title>Hash Functions</title><link>https://wiki.yigit.run/notes/Hash-Functions/</link><pubDate>Fri, 31 Dec 2021 12:54:13 +0300</pubDate><guid>https://wiki.yigit.run/notes/Hash-Functions/</guid><description>Hash functions are functions that take in data, or a stream of data and output a value that is set in size.</description></item><item><title>Hash Compression</title><link>https://wiki.yigit.run/notes/Hash-Compression/</link><pubDate>Fri, 31 Dec 2021 01:03:33 +0300</pubDate><guid>https://wiki.yigit.run/notes/Hash-Compression/</guid><description>It can be very useful to compress a hash value so that it becomes smaller, there are some methods to achieve this:</description></item><item><title>Candidate Key</title><link>https://wiki.yigit.run/notes/Candidate-Key/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.yigit.run/notes/Candidate-Key/</guid><description>A candidate key is a set of attributes or multiple attributes, which can be used to identify a tuple in a database.</description></item><item><title>Composite Key</title><link>https://wiki.yigit.run/notes/Composite-Key/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.yigit.run/notes/Composite-Key/</guid><description>It is possible that in a database schema, there are no [[/notes/Candidate Key|Candidate Key]]s, which means that there is no attribute that is enough to act as a unique identifier for the tuples in the database.</description></item><item><title>Not NULL Constraints</title><link>https://wiki.yigit.run/notes/Not-NULL-Constraints/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.yigit.run/notes/Not-NULL-Constraints/</guid><description>Because of the fact that a relation is defined as $R \subseteq D_1 \times D_2 &amp;hellip; \times D_n$, and a tuple(which represents a relation) cannot have empty elements, We assume that a special NULL value is part of every domain.</description></item><item><title>Primary Key Constraints</title><link>https://wiki.yigit.run/notes/Primary-Key-Constraints/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.yigit.run/notes/Primary-Key-Constraints/</guid><description>Since a relation is defined as a set of tuples, and a primary key has to be unique accross all database entries, we can define a primary key as a set of attributes in which no two tuples share the same values for those attributes.</description></item></channel></rss>