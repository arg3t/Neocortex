<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cs/databases on</title><link>https://wiki.fr1nge.xyz/tags/cs/databases/</link><description>Recent content in cs/databases on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wiki.fr1nge.xyz/tags/cs/databases/index.xml" rel="self" type="application/rss+xml"/><item><title>Identifying Relationship</title><link>https://wiki.fr1nge.xyz/notes/Identifying-Relationship/</link><pubDate>Tue, 21 Dec 2021 04:31:24 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Identifying-Relationship/</guid><description>Identifying relationships are relationships that not only act as a connection between two [[/notes/Entity|Entity]]s, but also act as an identifier to an entity.</description></item><item><title>Weak Entity</title><link>https://wiki.fr1nge.xyz/notes/Weak-Entity/</link><pubDate>Tue, 21 Dec 2021 04:29:53 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Weak-Entity/</guid><description>A weak [[/notes/Entity|Entity]] in database theory is an entity that cannot exist without another entity. In other words, they are dependant on and defined by another entity.</description></item><item><title>Entity</title><link>https://wiki.fr1nge.xyz/notes/Entity/</link><pubDate>Tue, 21 Dec 2021 04:21:47 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Entity/</guid><description>Entities are elements in a database that represent a certain object in real world, using some of its attributes. They are implemented using tuples in a database.</description></item><item><title>1st Normal Form (1NF)</title><link>https://wiki.fr1nge.xyz/notes/First-Normal-Form/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/First-Normal-Form/</guid><description>1st normal form is the simplest of the [[/notes/Normal Forms|Normal Forms]], it has no requirements for different types of functional dependencies.</description></item><item><title>Candidate Key</title><link>https://wiki.fr1nge.xyz/notes/Candidate-Key/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Candidate-Key/</guid><description>A candidate key is a set of attributes or multiple attributes, which can be used to identify a tuple in a database.</description></item><item><title>Composite Key</title><link>https://wiki.fr1nge.xyz/notes/Composite-Key/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Composite-Key/</guid><description>It is possible that in a database schema, there are no [[/notes/Candidate Key|Candidate Key]]s, which means that there is no attribute that is enough to act as a unique identifier for the tuples in the database.</description></item><item><title>Converting ER Diagrams to a [[Relational Model]]</title><link>https://wiki.fr1nge.xyz/notes/Converting-ER-Diagrams-to-a-Relational-Model/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Converting-ER-Diagrams-to-a-Relational-Model/</guid><description>Even though [[/notes/ER Diagrams|ER Diagrams]] contain more semantic information, they are harder to turn into actual databases because some of the constraints are impossible to represent.</description></item><item><title>Deletion Anomalies</title><link>https://wiki.fr1nge.xyz/notes/Deletion-Anomalies/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Deletion-Anomalies/</guid><description>When you have a redundant database and you delete all tuples that contain a certain value for a certain attribute. All data on that attribute is lost, making it impossible to create new tuples with that attribute.</description></item><item><title>Foreign Key Constraints</title><link>https://wiki.fr1nge.xyz/notes/Foreign-Key-Constraints/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Foreign-Key-Constraints/</guid><description>Sometimes, a relation between [[/notes/Entity|Entity]]s might need to me make a reference to another relation. In those cases, we use the following notation: Hero(id, first_name, last_name) Aliases(alias, heroid -&amp;gt; Hero(id)) in order to protect the referential integrity of the database, we set the constraint that a referencing attribute must be the key of a tuple that is in the database.</description></item><item><title>Functional Dependencies</title><link>https://wiki.fr1nge.xyz/notes/Functional-Dependency/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Functional-Dependency/</guid><description>If you have two sets of attributes, call them $X$ and $Y$, id $Y$ functionally depends on $X$, then two tuples which agree on their $X$ values must also agree on their $Y$ values.</description></item><item><title>Not NULL Constraints</title><link>https://wiki.fr1nge.xyz/notes/Not-NULL-Constraints/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Not-NULL-Constraints/</guid><description>Because of the fact that a relation is defined as $R \subseteq D_1 \times D_2 &amp;hellip; \times D_n$, and a tuple(which represents a relation) cannot have empty elements, We assume that a special NULL value is part of every domain.</description></item><item><title>Primary Key Constraints</title><link>https://wiki.fr1nge.xyz/notes/Primary-Key-Constraints/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Primary-Key-Constraints/</guid><description>Since a relation is defined as a set of tuples, and a primary key has to be unique accross all database entries, we can define a primary key as a set of attributes in which no two tuples share the same values for those attributes.</description></item><item><title>Update Anomalies</title><link>https://wiki.fr1nge.xyz/notes/Update-Anomalies/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Update-Anomalies/</guid><description>In a redundant database, when you need to update a certain value, you often need to update that value in all the tuples in your database.</description></item><item><title>What makes a Relational Database Design Good?</title><link>https://wiki.fr1nge.xyz/notes/Good-Relational-Database-Design/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Good-Relational-Database-Design/</guid><description>Minimal Redundancy: The less a database repeats the data in it, the better. Redundancy can cause issues such as [[/notes/Deletion Anomalies|Deletion Anomalies]] Prevents Modification Anomalies by Design: This means anomalous modifications are prevented by using keys, not by enforcing an excessive amount of contraints.</description></item><item><title>Entity Type vs Entity</title><link>https://wiki.fr1nge.xyz/notes/Difference-of-Entity-and-Entity-Type/</link><pubDate>Tue, 23 Nov 2021 14:10:26 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/Difference-of-Entity-and-Entity-Type/</guid><description>An [[/notes/Entity|Entity]] type represents multiple entities, while an entity is an object in the real world that fits in the entity type.</description></item><item><title>ER Diagram Attributes</title><link>https://wiki.fr1nge.xyz/notes/ER-Diagram-Attributes/</link><pubDate>Tue, 23 Nov 2021 14:10:26 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/ER-Diagram-Attributes/</guid><description>Attributes of an [[/notes/Entity|Entity]] can be represented in [[/notes/ER Diagrams|ER Diagrams]] using an ellipse connecting to an attribute. However, there other ways to do that as well.</description></item><item><title>ER Diagram Subclasses and Superclasses</title><link>https://wiki.fr1nge.xyz/notes/EER-Diagram-Subclasses/</link><pubDate>Tue, 23 Nov 2021 14:10:26 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/EER-Diagram-Subclasses/</guid><description>Sometimes when drawing[[/notes/ER Diagrams|ER Diagrams]], sometimes you need to represent a subclass and superclass relationship between entities when they share attributes and relations.</description></item><item><title>ER Diagrams</title><link>https://wiki.fr1nge.xyz/notes/ER-Diagrams/</link><pubDate>Tue, 23 Nov 2021 14:10:26 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/ER-Diagrams/</guid><description>ER diagrams are used to model [[/notes/Entity|Entity]]s, their attributes and the relations between those entities. In ER diagramming, there are constructs and symbols relating to those constructs.</description></item><item><title>Total Participation in ER Diagrams</title><link>https://wiki.fr1nge.xyz/notes/ER-Diagram-Total-Participation/</link><pubDate>Tue, 23 Nov 2021 14:10:26 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/ER-Diagram-Total-Participation/</guid><description>When drawing [[/notes/ER Diagrams|ER Diagrams]], you need to draw relationships between [[/notes/Entity|Entity]]s, for which you use lines. However, there are cases where a single line is not enough, cases where you need to enforce that line.</description></item><item><title>Weak Entity and Identifying Relationship in ER Diagrams</title><link>https://wiki.fr1nge.xyz/notes/ER-Diagrams-Weak-Entity-and-Identifying-Relationship/</link><pubDate>Tue, 23 Nov 2021 14:10:26 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/ER-Diagrams-Weak-Entity-and-Identifying-Relationship/</guid><description>A [[/notes/Weak Entity|Weak Entity]] in [[/notes/ER Diagrams|ER Diagrams]] is an entity type that depends on another entity for its existence and cannot exist without it.</description></item><item><title>SQL Injection</title><link>https://wiki.fr1nge.xyz/notes/SQL-Injection/</link><pubDate>Tue, 16 Nov 2021 21:07:41 +0100</pubDate><guid>https://wiki.fr1nge.xyz/notes/SQL-Injection/</guid><description>SQL injection vulnerabilities occur when developers fail to properly sanitise the parameters in an SQL query that are provided by users.</description></item></channel></rss>