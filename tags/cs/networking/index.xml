<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cs/networking on</title><link>https://wiki.yigit.run/tags/cs/networking/</link><description>Recent content in cs/networking on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wiki.yigit.run/tags/cs/networking/index.xml" rel="self" type="application/rss+xml"/><item><title>CIDR</title><link>https://wiki.yigit.run/notes/CIDR/</link><pubDate>Sat, 09 Jul 2022 09:43:25 +0200</pubDate><guid>https://wiki.yigit.run/notes/CIDR/</guid><description>CIDR ranges are the implementation of [[notes/IP Ranges|ip ranges]] in the modern internet. CIDR ranges are distributed to organizations via a central authority.</description></item><item><title>IP Ranges</title><link>https://wiki.yigit.run/notes/IP-Ranges/</link><pubDate>Sat, 09 Jul 2022 09:28:50 +0200</pubDate><guid>https://wiki.yigit.run/notes/IP-Ranges/</guid><description>When you want to represent several IPs, we use a combination of IP addresses and subnet masks. The subnet mask essentially acts as a bitmask that ensures the IP addresses in the range has certain bits same as the IP range&amp;rsquo;s address.</description></item><item><title>Distance Vector Routing</title><link>https://wiki.yigit.run/notes/Distance-Vector-Routing/</link><pubDate>Thu, 07 Jul 2022 12:48:21 +0200</pubDate><guid>https://wiki.yigit.run/notes/Distance-Vector-Routing/</guid><description>In a network that uses distance vector routing, every router has a routing table which contains a list of every single router in the network, as well as the cost of accessing that router and through which of its edges it can access it.</description></item><item><title>Routing</title><link>https://wiki.yigit.run/notes/Routing/</link><pubDate>Thu, 07 Jul 2022 12:27:23 +0200</pubDate><guid>https://wiki.yigit.run/notes/Routing/</guid><description>Routing is the process of finding a path(preferably a short one) between two routers in a netwok. There are several algorithms for routing packets effectively.</description></item><item><title>ISP</title><link>https://wiki.yigit.run/notes/ISP/</link><pubDate>Thu, 07 Jul 2022 12:22:52 +0200</pubDate><guid>https://wiki.yigit.run/notes/ISP/</guid><description>An ISP or Internet Service Provider isthe organization that owns/manages the connection between routers.</description></item><item><title>Structure of the Internet</title><link>https://wiki.yigit.run/notes/Structure-of-the-Internet/</link><pubDate>Thu, 07 Jul 2022 12:19:19 +0200</pubDate><guid>https://wiki.yigit.run/notes/Structure-of-the-Internet/</guid><description>![[images/Structure of Internet.png]] The internet is structured as an interconnected network of routers. The network can also be thought of as a [[notes/Graphs|graph]] where each router is a node and each connection is an edge between those nodes.</description></item><item><title>Goodput</title><link>https://wiki.yigit.run/notes/Goodput/</link><pubDate>Thu, 07 Jul 2022 10:44:00 +0200</pubDate><guid>https://wiki.yigit.run/notes/Goodput/</guid><description>Goodput is very similar to [[notes/Throughput|throughput]], except it is the rate of sending the data we want. So, it is calculated like so.</description></item><item><title>Throughput</title><link>https://wiki.yigit.run/notes/Throughput/</link><pubDate>Thu, 07 Jul 2022 10:42:53 +0200</pubDate><guid>https://wiki.yigit.run/notes/Throughput/</guid><description>The throughput of a machine is the rate at which it sends everything. This includes the protocol metadata as well as the initial data.</description></item><item><title>Connection</title><link>https://wiki.yigit.run/notes/Connection/</link><pubDate>Thu, 07 Jul 2022 10:40:13 +0200</pubDate><guid>https://wiki.yigit.run/notes/Connection/</guid><description>In networking, connection is the concept of two machines sharing their initial state and exchanging information regarding their state as it changes.</description></item><item><title>Datagrams</title><link>https://wiki.yigit.run/notes/Datagrams/</link><pubDate>Thu, 07 Jul 2022 10:35:28 +0200</pubDate><guid>https://wiki.yigit.run/notes/Datagrams/</guid><description>In the context of networking, datagrams refer to pieces of data sent in a [[notes/Connection|connectionles]] manner. Just like telegrams, data is sent without prior communication or sharing state.</description></item><item><title>Network Layer</title><link>https://wiki.yigit.run/notes/Network-Layer/</link><pubDate>Thu, 07 Jul 2022 10:27:59 +0200</pubDate><guid>https://wiki.yigit.run/notes/Network-Layer/</guid><description>The network layer is rather concerned about [[notes/Datagrams|datagrams]]. The network layer allows packets to be transferred between two devices who need to communicate across a network of routers.</description></item><item><title>Data-Link Layer</title><link>https://wiki.yigit.run/notes/Data-Link-Layer/</link><pubDate>Thu, 07 Jul 2022 09:12:41 +0200</pubDate><guid>https://wiki.yigit.run/notes/Data-Link-Layer/</guid><description>Data Link layer is responsible of:
Regulating the data flow between two devices Make sure data is error free using ECC Create note for ECC Provide an interface to the [[notes/Network Layer|network layer]] The pieces of data that data link layer deals with are called fragments.</description></item><item><title>Hierarchical Routing</title><link>https://wiki.yigit.run/notes/Hierarchical-Routing/</link><pubDate>Thu, 07 Jul 2022 01:40:17 +0200</pubDate><guid>https://wiki.yigit.run/notes/Hierarchical-Routing/</guid><description>When networks get very big, you can start inserting [[notes/IP Ranges|ip ranges]] into routing tables. When routing a fragment, if the destination ip is in one of the IP ranges in the table, the packet gets routed to that router.</description></item><item><title>Link State Routing</title><link>https://wiki.yigit.run/notes/Link-State-Routing/</link><pubDate>Thu, 07 Jul 2022 01:33:01 +0200</pubDate><guid>https://wiki.yigit.run/notes/Link-State-Routing/</guid><description>Works by storing the entire network&amp;rsquo;s graph and running a path-finding algorithm such as [[notes/Dijkstra&amp;rsquo;s Algorithm|djikstra]] when a packet needs to be routed.</description></item><item><title>Path Vector Routing</title><link>https://wiki.yigit.run/notes/Path-Vector-Routing/</link><pubDate>Thu, 07 Jul 2022 01:29:50 +0200</pubDate><guid>https://wiki.yigit.run/notes/Path-Vector-Routing/</guid><description>Path vector. routing is very similar to [[notes/Distance Vector Routing|distance vector routing]] except that it solves the count to infinity problem by storing the path to access the router instead of just storing the neighbour.</description></item><item><title>Networking Model</title><link>https://wiki.yigit.run/notes/Networking-Model/</link><pubDate>Sat, 18 Jun 2022 01:32:24 +0200</pubDate><guid>https://wiki.yigit.run/notes/Networking-Model/</guid><description>In modern computing, network communication is split up into several layers. Namely:
Physical Layer: Responsible for sending/receiving bits from one physical layer to another.</description></item></channel></rss>