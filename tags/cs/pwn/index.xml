<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cs/pwn on</title><link>https://wiki.yigit.run/tags/cs/pwn/</link><description>Recent content in cs/pwn on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wiki.yigit.run/tags/cs/pwn/index.xml" rel="self" type="application/rss+xml"/><item><title>Pwnable.kr Mistake</title><link>https://wiki.yigit.run/notes/ojor/</link><pubDate>Sat, 20 Aug 2022 13:40:53 +0200</pubDate><guid>https://wiki.yigit.run/notes/ojor/</guid><description>For this one, you need to be especially careful, while inspecting the source code, pay attention to the line:
1 if(fd=open(&amp;#34;/home/mistake/password&amp;#34;,O_RDONLY,0400) &amp;lt; 0){ Here, the programmer meant to to save the return value of open() to fd, but they forgot to use braces so instead they save the result of the comparison to fd.</description></item><item><title>Pwnable.kr Leg</title><link>https://wiki.yigit.run/notes/l8zl/</link><pubDate>Sat, 20 Aug 2022 13:28:55 +0200</pubDate><guid>https://wiki.yigit.run/notes/l8zl/</guid><description>This challenge is an introductory ARM assembly challenge. It gives us two files:
leg.c:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 #include &amp;lt;stdio.</description></item><item><title>Pwnable.kr Input</title><link>https://wiki.yigit.run/notes/jcbl/</link><pubDate>Sat, 20 Aug 2022 11:23:47 +0200</pubDate><guid>https://wiki.yigit.run/notes/jcbl/</guid><description>This challenges teaches the solver on controlling environment variables, arguments and pipes of the process that is executed as well as using sockets.</description></item><item><title>pwnable.kr</title><link>https://wiki.yigit.run/notes/63l5/</link><pubDate>Sat, 20 Aug 2022 11:20:07 +0200</pubDate><guid>https://wiki.yigit.run/notes/63l5/</guid><description> pwnable.kr is a wargame on binary exploitation and reverse engineering. It has 4 parts:
Toddler&amp;rsquo;s Bottle [[notes/uutv | random]] [[notes/jcbl | input]] [[notes/l8zl | leg]] [[notes/ojor | mistake]] [[notes/s294 | shellshock]] [[notes/jsb9 | coin1]] [[notes/wsbt | blackjack]] [[notes/h1a9 | lotto]] [[notes/uolp | cmd1]] [[notes/wn09 | cmd2]]] [[notes/pi2k | uaf]]</description></item><item><title>Pwnable.kr Random</title><link>https://wiki.yigit.run/notes/uutv/</link><pubDate>Sat, 20 Aug 2022 10:18:19 +0200</pubDate><guid>https://wiki.yigit.run/notes/uutv/</guid><description>The source code for the challenge is:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include &amp;lt;stdio.</description></item><item><title>Leviathan</title><link>https://wiki.yigit.run/notes/Leviathan/</link><pubDate>Tue, 16 Nov 2021 21:07:41 +0100</pubDate><guid>https://wiki.yigit.run/notes/Leviathan/</guid><description>leviathan0: grep leviathan ~/.backup/bookmarks.html (rioGegei8m) leviathan1 The home dir has a single SUID binary check, owned by leviathan2</description></item></channel></rss>