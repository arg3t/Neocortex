<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cs/java on</title><link>https://wiki.yigit.run/tags/cs/java/</link><description>Recent content in cs/java on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wiki.yigit.run/tags/cs/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Pointcut</title><link>https://wiki.yigit.run/notes/l9ir/</link><pubDate>Mon, 01 Aug 2022 12:59:32 +0200</pubDate><guid>https://wiki.yigit.run/notes/l9ir/</guid><description>A predicate that is used to match [[notes/ksz6|join points]]. Every [[notes/7dlm|advice]] is associated with a pointcut expression and runs at [[notes/ksz6|join point]] matched by the pointcut.</description></item><item><title>Advice</title><link>https://wiki.yigit.run/notes/7dlm/</link><pubDate>Mon, 01 Aug 2022 12:58:03 +0200</pubDate><guid>https://wiki.yigit.run/notes/7dlm/</guid><description>An advice is when the action is taken by the [[notes/5aq8|aspect]]. It can be either around, before or after.</description></item><item><title>Join Point</title><link>https://wiki.yigit.run/notes/ksz6/</link><pubDate>Mon, 01 Aug 2022 12:56:21 +0200</pubDate><guid>https://wiki.yigit.run/notes/ksz6/</guid><description>A point of execution on the program that sits between the method we want to execute and the [[notes/5aq8|aspect]] that needs to be executed.</description></item><item><title>Aspects</title><link>https://wiki.yigit.run/notes/5aq8/</link><pubDate>Mon, 01 Aug 2022 12:53:44 +0200</pubDate><guid>https://wiki.yigit.run/notes/5aq8/</guid><description>A feature that concerns/is used by multiple classes.</description></item><item><title>Aspect Oriented Programming</title><link>https://wiki.yigit.run/notes/yrff/</link><pubDate>Mon, 01 Aug 2022 12:51:34 +0200</pubDate><guid>https://wiki.yigit.run/notes/yrff/</guid><description>Aspect Oriented Programming complements OOP by shifting the focus from objects to [[notes/5aq8|aspects]]. This enables programmers to manage transactions, access control and many features in a more modular manner.</description></item><item><title>In-Place Merge-Sort</title><link>https://wiki.yigit.run/notes/In-Place-Merge-Sort/</link><pubDate>Thu, 30 Dec 2021 11:41:59 +0300</pubDate><guid>https://wiki.yigit.run/notes/In-Place-Merge-Sort/</guid><description>It is sometimes more efficient to implement [[notes/Merge Sort|Merge Sort]] in-place. Here is an implementation that sorts an two-dimensional array of strings according to a column, the explanations are made as comments:</description></item><item><title>In-Place Quick Sort</title><link>https://wiki.yigit.run/notes/In-Place-Quick-Sort/</link><pubDate>Sat, 25 Dec 2021 02:40:50 +0100</pubDate><guid>https://wiki.yigit.run/notes/In-Place-Quick-Sort/</guid><description>Implementing [[notes/Quick Sort|Quick Sort]] in place allows us to decrease the space-complexity of the algorithm and make it slightly more efficient.</description></item><item><title>Comparables and Comparators</title><link>https://wiki.yigit.run/notes/Comparables-and-Comparators/</link><pubDate>Tue, 14 Dec 2021 20:32:21 +0100</pubDate><guid>https://wiki.yigit.run/notes/Comparables-and-Comparators/</guid><description>In Java, there are two important interfaces, comparable and comparator.
Comparable A comparable is an interface with a generic. A class implementing it must also implement the compareTo function.</description></item><item><title>Copying Lists</title><link>https://wiki.yigit.run/notes/Copying-Lists/</link><pubDate>Tue, 16 Nov 2021 21:07:41 +0100</pubDate><guid>https://wiki.yigit.run/notes/Copying-Lists/</guid><description>When copying lists, you need to create a new [[notes/Array|Array]]/[[notes/Linked List|Linked List]] and copy over each element from the original list into the new one.</description></item></channel></rss>